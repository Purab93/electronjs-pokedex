{"version":3,"sources":["menu.js","pokecard.js","loader.js","homepg.js","searchpg.js","pokedetail.js","App.js","index.js"],"names":["Menu","className","to","pathname","src","alt","React","Component","PokeCard","pokeData","this","props","name","imgData","getPokeImgs","sprites","type","getPokeType","types","hp","base_experience","pokeType","map","val","join","sliderConfig","dots","infinite","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","lazyLoad","Object","keys","reverse","key","index","getPokeDetails","state","Loader","HomePage","hndlPokeChng","selPoke","setState","srchDisable","length","errMsg","showErrMsg","showLoader","date","Date","localStorage","getItem","toDateString","pokeList","JSON","parse","fetchRndmPokeData","getHomeData","Axios","all","getPokeList","getRndmPokeData","then","spread","pokeListData","rndmPokeData","status","data","results","obj","label","value","url","setItem","stringify","showError","catch","err","get","rndmPokeNum","Math","floor","random","setTimeout","Alert","variant","onClose","dismissible","placeholder","isMulti","onChange","options","Button","disabled","SrchPg","allPokeData","location","res","console","log","result","getAllPokeDtls","PokeDetail","getSpeciesData","species","weight","height","stats","getPokeStats","moves","getPokeMoves","speciesData","natureTxt","flavor_text_entries","filter","language","flavor_text","addData","baseHapp","base_happiness","color","captureRate","capture_rate","evolvesFrom","evolves_from_species","growthRate","growth_rate","habitat","finalData","pokeMoves","move","stat","base_stat","Accordion","Card","Toggle","as","Header","eventKey","Collapse","Body","App","history","exact","path","component","HomePg","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7db294d.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from \"react-router-dom\";\n/**\n * Menu class for logos and options\n */\nexport default class Menu extends React.Component {\n    render(){\n        return (\n            <div className=\"menu-container\">\n                <Link to={{\n                        pathname: '/'\n                }}>\n                    <div className=\"logo-holder\">\n                    <img src={process.env.PUBLIC_URL + '/logo.png'} alt=\"pokemon-logo\" />\n                    </div>\n                </Link>\n                <Link to={{\n                        pathname: '/'\n                }}>\n                    <div className=\"pokeball-logo pokeball-logo-left\">\n                        <img src={process.env.PUBLIC_URL + '/pokeball_trans.png'} alt=\"pokeball-logo\" />\n                    </div>\n                </Link>\n                <Link to={{\n                        pathname: '/'\n                }}>\n                    <div className=\"pokeball-logo pokeball-logo-right\">\n                        <img src={process.env.PUBLIC_URL + '/pokeball_trans.png'} alt=\"pokeball-logo\" />\n                    </div>\n                </Link>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { Link } from \"react-router-dom\";\n\n\n/**\n * class for Pokemon Card Display Summary\n */\nexport default class PokeCard extends React.Component {\n\n    /**\n     * Simplifies and returns Poke details\n     */\n    getPokeDetails(){\n        let pokeData = this.props;\n        return {\n            name: pokeData.name,\n            imgData: this.getPokeImgs(pokeData.sprites),\n            type: this.getPokeType(pokeData.types),\n            hp: pokeData.base_experience\n        }\n    }\n    /**\n     * Returns Pokemon Type String\n     * @param {Array} pokeType \n     */\n    getPokeType(pokeType) {\n        let typeData = pokeType.map((val) => {\n            return val.type.name;\n        });\n        return typeData.join(', ');\n    }\n    /**\n     * Returns Image Slider for Pokemon Data\n     * @param {Object} imgData \n     */\n    getPokeImgs(imgData) {\n        let sliderConfig = {\n            dots: false,\n            infinite: true,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            className: 'poke-sldr',\n            autoplay: true,\n            autoplaySpeed: 2000,\n            lazyLoad: 'progressive'\n        };\n        return (<Slider {...sliderConfig } >\n            {\n                Object.keys(imgData).reverse().map((key, index) => {\n                    if (imgData[key]) {\n                        return (<img key={'poke-img-' + index} className=\"poke-img\" src={imgData[key]} alt=\"poke-img\" />);\n                    }\n                })\n            }\n            </Slider >\n        );\n    }\n\n    render(){\n        let pokeData = this.getPokeDetails();\n        return (\n            <div className=\"poke-card-container\">\n                <div className=\"poke-card-header\">\n                    <div className=\"poke-name\">{pokeData.name}</div>\n                    <div className=\"poke-hp\">\n                        <div>{pokeData.hp+'HP'}</div>\n                    </div>\n                    <div className=\"poke-type-data\">{pokeData.type + ' Pokemon'}</div>\n                </div>\n                <div className=\"poke-img-slider\">\n                    {pokeData.imgData}\n                </div>\n                <div className=\"link-holder\">\n                    <Link to={{\n                        pathname: `/pokemon/${pokeData.name}`,\n                        state: {...this.props}\n                    }}>\n                        View Details\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nconst Loader = () => (\n      <div>\n          <div className=\"loaderbg\">\n            <img className=\"loader\" src={process.env.PUBLIC_URL + '/loader.gif'} alt=\"loader\"/>\n         </div>\n      </div>\n    );\n\nexport default Loader;","import React from 'react';\nimport { Alert, Button } from 'react-bootstrap';\nimport Select from 'react-select';\nimport Axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport PokeCard from './pokecard';\nimport Loader from './loader';\n\n/**\n * class for rendering the Homepage data\n */\nexport default class HomePage extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                selPoke: null,\n                errMsg: '',\n                showErrMsg: false,\n                srchDisable: true,\n                showLoader: true\n            }\n        }\n        /**\n         * Method checks for data in localstorage if not found decides which API to be called\n         * Use of memoization, hence, requests don't need to be send to the server repeatedly\n         */\n        componentWillMount() {\n            let date = new Date(),\n                pokeData = localStorage.getItem(date.toDateString()),\n                pokeList = localStorage.getItem('pokeList');\n\n            if (pokeData && pokeList) {\n                pokeData = JSON.parse(pokeData);\n                pokeList = JSON.parse(pokeList);\n                this.setState({\n                    pokeList,\n                    pokeData,\n                    showLoader: false\n                });\n            } else if (pokeList && !pokeData) {\n                pokeList = JSON.parse(pokeList);\n                this.fetchRndmPokeData(pokeList);\n            } else {\n                this.getHomeData();\n            }\n\n        }\n        /**\n         * Fetches data from 2 API's to show user Poke list and Random Poke\n         * Stores in localstorage so the user doesn't need to fetch the API once fetched\n         */\n        getHomeData() {\n            Axios.all([this.getPokeList(), this.getRndmPokeData()])\n                .then(Axios.spread((pokeListData, rndmPokeData) => {\n                    if (pokeListData.status === 200 && rndmPokeData.status === 200) {\n                        let pokeList = pokeListData.data.results.map((obj) => {\n                            return {\n                                label: obj.name,\n                                value: obj.url\n                            }\n                        });\n                        let date = new Date();\n                        localStorage.setItem(date.toDateString(), JSON.stringify(rndmPokeData.data));\n                        localStorage.setItem('pokeList', JSON.stringify(pokeList));\n\n                        this.setState({\n                            pokeList,\n                            pokeData: rndmPokeData.data,\n                            showLoader: false\n                        });\n                    } else {\n                        this.showError('Something went wrong. Please try again.');\n                    }\n                })).catch((err) => {\n                    this.showError('Something went wrong. Please try again.');\n                });\n        }\n        /**\n         * API call for getting poke list\n         */\n        getPokeList() {\n            return Axios.get('https://pokeapi.co/api/v2/pokemon/?offset=0&limit=964');\n        }\n        /**\n         * API call for getting random poke data\n         */\n        getRndmPokeData() {\n            let rndmPokeNum = Math.floor(Math.random() * Math.floor(807));\n\n            return Axios.get('https://pokeapi.co/api/v2/pokemon/' + rndmPokeNum);\n        }\n\n        /**\n         * Fetches only Random Poke data and saves pokeList to state from local storage\n         * @param {Object} pokeList passed to udpate state\n         */\n        \n        fetchRndmPokeData(pokeList) {\n            this.getRndmPokeData().then((rndmPokeData) => {\n                if (rndmPokeData.status === 200) {\n                    let date = new Date();\n                    localStorage.setItem(date.toDateString(), JSON.stringify(rndmPokeData.data));\n                    this.setState({\n                        pokeData: rndmPokeData.data,\n                        pokeList,\n                        showLoader: false\n                    });\n                } else {\n                    this.showError('Something went wrong. Please try again.');\n                }\n            }).catch((err) => {\n                this.showError('Something went wrong. Please try again.');\n            });\n        }\n\n        hndlPokeChng = (selPoke) => {\n            this.setState({\n                selPoke,\n                srchDisable: !(selPoke.length > 0)\n            });\n        }\n        /**\n         * Error Message display method\n         * @param {String} errMsg dynamic variable for error msg display \n         */\n        showError(errMsg) {\n            this.setState({\n                showErrMsg: true,\n                errMsg\n            });\n\n            setTimeout(() => {\n                this.setState({\n                    showErrMsg: false\n                });\n            }, 5000);\n        }\n\n        render() {\n            return ( \n                this.state.showLoader?<Loader />:\n                    <div className = \"home-container\" >\n                        <div className = \"home-content\" > {\n                        this.state.showErrMsg ? < Alert variant = 'danger'\n                        onClose = {\n                            () => this.setState({\n                                showErrMsg: false\n                            })\n                        }\n                        dismissible > { this.state.errMsg } </Alert>:<></ >\n                    } <div className = \"srch-container\" >\n                    <div className = \"sel-holder\" >\n                        <Select placeholder = \"Select Pokemon ...\"\n                        isMulti = { true }\n                        value = { this.state.selPoke }\n                        onChange = { this.hndlPokeChng }\n                        options = { this.state.pokeList ? this.state.pokeList : [] }\n                        /> \n                    </div> \n                    <div className = \"srch-btn\" >\n                    <Link to = {\n                        {\n                            pathname: '/srchpg',\n                            state: {\n                                selPoke: this.state.selPoke\n                            }\n                        }\n                    } >\n                        <Button variant = \"danger\"\n                        disabled = { this.state.srchDisable } >\n                        Search </Button> \n                    </Link> \n                    </div> \n                    </div> {\n                        this.state.pokeData ?<>\n                            <div className = \"home-poke-quest\" >\n                                Today 's Poke Guide \n                            </div> <PokeCard {...this.state.pokeData }\n                        /> </>: < > </>} \n                    </div> \n                </div>\n        );\n    }\n}","import React from 'react';\nimport Axios from 'axios';\nimport PokeCard from './pokecard';\nimport Loader from './loader';\n\n/**\n * class for Search Page Handling\n */\nexport default class SrchPg extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            allPokeData: [],\n            showLoader: true\n        }\n    }\n    /**\n     * Fetches all selected pokemon data by creating dynamic calls for each API\n     */\n    componentWillMount(){\n        let allPokeData = this.props.location.state.selPoke;\n\n        Axios.all(allPokeData.map(obj => Axios.get(obj.value)))\n        .then(Axios.spread((...res) => {\n            this.setState({\n                allPokeData:res,\n                showLoader: false\n            });  \n        })).catch((err)=>{\n            console.log('Something went wrong. Please try again.');\n        });\n    }\n    /**\n     * Based on the API outputs above returns Poke Card of each poke\n     */\n    getAllPokeDtls(){\n        return this.state.allPokeData.map((result)=>{\n            return (\n                <div key={result.data.name} className=\"srch-poke-card\">\n                    <PokeCard {...result.data} />\n                </div>\n            );\n        });\n    }\n\n    render(){\n        return (\n            this.state.showLoader?<Loader /> :\n            <div className=\"srch-rslt-container container\">\n                {this.state.allPokeData.length?this.getAllPokeDtls():<></>}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Axios from 'axios';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { Accordion, Card } from 'react-bootstrap';\nimport Loader from './loader';\n\n/**\n * class for Pokemon Details and Features\n */\nexport default class PokeDetail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { ...props.location.state,...{showLoader: true}}\n    }\n\n    componentDidMount() {\n        let pokeData = this.getPokeDetails();\n        this.getSpeciesData(pokeData, this.state.species);\n    }\n\n    /**\n     * Simplifies and returns Poke details\n     */\n\n    getPokeDetails() {\n        let pokeData = this.state;\n        return {\n            name: pokeData.name,\n            imgData: this.getPokeImgs(pokeData.sprites),\n            type: this.getPokeType(pokeData.types),\n            hp: pokeData.base_experience,\n            weight: pokeData.weight,\n            height: pokeData.height,\n            stats: this.getPokeStats(pokeData.stats),\n            moves: this.getPokeMoves(pokeData.moves)\n        }\n    }\n    /**\n     * Fetches additional data for the pokemon species using species API\n     * @param {Object} pokeData use for later merging the species data and updating state\n     * @param {Object} speciesData base species data passed for API call\n     */\n    getSpeciesData(pokeData, speciesData) {\n        Axios(speciesData.url)\n            .then((res) => {\n                let speciesData = res.data;\n                let natureTxt = '';\n\n                speciesData.flavor_text_entries.filter((obj, index) => {\n                    if (obj.language.name === 'en') {\n                        natureTxt += ' ' + obj.flavor_text;\n                    }\n                })\n                let addData = {\n                    baseHapp: speciesData.base_happiness,\n                    color: speciesData.color && speciesData.color.name?speciesData.color.name:null,\n                    captureRate: speciesData.capture_rate,\n                    evolvesFrom: speciesData.evolves_from_species && speciesData.evolves_from_species.name ?speciesData.evolves_from_species.name:null,\n                    natureTxt: natureTxt,\n                    growthRate: speciesData.growth_rate && speciesData.growth_rate.name?speciesData.growth_rate.name:null,\n                    habitat: speciesData.habitat && speciesData.habitat.name?speciesData.habitat.name:null\n                };\n                let finalData = { ...pokeData, ...addData };\n                this.setState({\n                    finalData,\n                    showLoader: false\n                })\n            }).catch((err) => {\n                console.log('Something went wrong');\n            });\n    }\n    /**\n     * Returns pokemon moves DOM\n     * @param {Array} pokeMoves \n     */\n    getPokeMoves(pokeMoves) {\n        return (\n            <>\n                {pokeMoves.map((obj) => {\n                    return (\n                        <div className=\"poke-move\" key={obj.move.name}>\n                            {obj.move.name}\n                        </div>\n                    )\n                })}\n            </>\n        )\n    }\n    /**\n     * Return pokemon Statistics DOM\n     * @param {Array} stats \n     */\n    getPokeStats(stats) {\n        return (<>\n            {stats.map((obj) => {\n                return (\n                    <div className=\"poke-stat\" key={obj.stat.name}>\n                        {obj.stat.name}\n                        <br />\n                        <span className=\"stat-pow\">{obj.base_stat}</span>\n                    </div>\n                )\n            })}\n        </>);\n    }\n    /**\n     * Returns Pokemon Type String\n     * @param {Array} pokeType \n     */\n    getPokeType(pokeType) {\n        let typeData = pokeType.map((val) => {\n            return val.type.name;\n        });\n        return typeData.join(', ');\n    }\n    /**\n     * Returns Image Slider for Pokemon Data\n     * @param {Object} imgData \n     */\n    getPokeImgs(imgData) {\n        let sliderConfig = {\n            dots: false,\n            infinite: true,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            className: 'poke-sldr',\n            autoplay: true,\n            autoplaySpeed: 2000,\n            lazyLoad: 'progressive'\n        };\n        return (<Slider {...sliderConfig} >\n            {\n                Object.keys(imgData).reverse().map((key, index) => {\n                    if (imgData[key]) {\n                        return (<img key={'poke-img-' + index} className=\"poke-img\" src={imgData[key]} alt=\"poke-img\" />);\n                    }\n                })\n            }\n        </Slider >\n        );\n    }\n\n    render() {\n        let pokeData = this.state && this.state.finalData ? this.state.finalData : {};\n        return (\n            this.state.showLoader?<Loader />:\n            <div className=\"poke-details-container\">\n                <div className=\"poke-detail-header\">\n                    <div className=\"poke-name\">{pokeData.name}</div>\n                    <div className=\"poke-hp\">\n                        <div>{pokeData.hp + 'HP'}</div>\n                    </div>\n                    <div className=\"poke-type-data\">\n                        <span className=\"poke-typ\">{pokeData.type + ' Pokemon, '}</span>\n                        {pokeData.evolvesFrom?<span className=\"evol-data\">{'Evolves from '+ pokeData.evolvesFrom + ', '}</span>:<></>}\n                        <span className=\"ht-wt-data\">{'Height: ' + pokeData.height + 'in Weight:'+ pokeData.weight + 'lbs'}</span>\n                    </div>\n                </div>\n                <div className=\"poke-detail-body row\">\n                    <div className=\"poke-img-slider col-12 col-md-4\">\n                        {pokeData.imgData}\n                    </div>\n\n                    <div className=\"poke-details col-12 col-md-8\">\n                        <div className=\"poke-stats-holder\">\n                            {pokeData.stats}\n                        </div>\n                    </div>\n                    <div className=\"poke-moves-holder col-12\">\n                        <Accordion>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                    <span className=\"accor-header-text\">Summary</span>\n                                    <span className=\"accor-header-icon\">+</span>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"0\">\n                                    <Card.Body>\n                                        <div className=\"species-desc\">\n                                            {pokeData.natureTxt}\n                                        </div>\n                                    </Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                                    <span className=\"accor-header-text\">Attacks</span>\n                                    <span className=\"accor-header-icon\">+</span>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"1\">\n                                    <Card.Body>\n                                        {pokeData.moves}\n                                    </Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n                                    <span className=\"accor-header-text\">Additional Info</span>\n                                    <span className=\"accor-header-icon\">+</span>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"2\">\n                                    <Card.Body>\n                                        <div className=\"add-info\">\n                                        <div className=\"poke-stat\">\n                                            Base Happiness\n                                        <br />\n                                            <span className=\"stat-pow\">{pokeData.baseHapp}</span>\n                                        </div>\n                                        {pokeData.captureRate?<div className=\"poke-stat\">\n                                            Capture Rate\n                                        <br />\n                                            <span className=\"stat-pow\">{pokeData.captureRate}</span>\n                                        </div>:<></>}\n                                        {pokeData.growthRate?\n                                        <div className=\"poke-stat\">\n                                            Growth Rate\n                                        <br />\n                                            <span className=\"stat-pow\">{pokeData.growthRate}</span>\n                                        </div>:<></>}\n                                        \n                                        {pokeData.habitat?\n                                        <div className=\"poke-stat\">\n                                            Habitat\n                                        <br />\n                                            <span className=\"stat-pow\">{pokeData.habitat}</span>\n                                        </div>:<></>}\n                                        {pokeData.color?\n                                        <div className=\"poke-stat\">\n                                            Color\n                                        <br />\n                                            <span className=\"stat-pow\">{pokeData.color}</span>\n                                        </div>:<></>}\n                                    </div>\n                                    </Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                        </Accordion>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport './App.css';\n\nimport Menu from './menu';\nimport HomePg from './homepg';\nimport SrchPg from './searchpg';\nimport PokeDetail from './pokedetail';\n\n/**\n * App class use for setting Routing in the APP\n */\nexport default class App extends React.Component {\n  render(){\n    return (\n      <div className=\"app-container\">\n        <div className=\"app-holder container\">\n          <Router history={this.props.history}>\n            <Menu />\n            <Switch>\n              <Route exact path=\"/\" component={HomePg}/>\n              <Route exact path=\"/srchpg\" component={SrchPg}></Route>\n              <Route exact path=\"/pokemon/:pokename\" component={PokeDetail}/>\n            </Switch>\n          </Router>\n        </div>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('poke-app'));"],"sourceRoot":""}